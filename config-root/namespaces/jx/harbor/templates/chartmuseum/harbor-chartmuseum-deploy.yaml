# Source: harbor/templates/chartmuseum/chartmuseum-dpl.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harbor-chartmuseum
  labels:
    app.kubernetes.io/name: harbor
    helm.sh/chart: harbor-9.6.1
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: chartmuseum
    gitops.jenkins-x.io/pipeline: 'namespaces'
  namespace: jx
  annotations:
    wave.pusher.com/update-on-config-change: 'true'
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: harbor
      app.kubernetes.io/instance: harbor
      app.kubernetes.io/component: chartmuseum
  template:
    metadata:
      labels:
        app.kubernetes.io/name: harbor
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/component: chartmuseum
      annotations:
        checksum/configmap-envvars: 6e7be5444360ab6ac6321cffc926627bd2be0262b3177b68ad1257868ab245c6
        checksum/secret: d534598d8e811997b19ee3aede7b73037727f4f94a2130ec48e729e3ac67fe2f
        checksum/secret-core: 1c6452fa7f65f7db87d6cb77d134888e9f5094e0ff919607cf84472d09611a83
    spec:
      automountServiceAccountToken: false
      affinity:
        podAffinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: harbor
                    app.kubernetes.io/instance: harbor
                    app.kubernetes.io/component: chartmuseum
                namespaces:
                  - "jx"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
      securityContext:
        fsGroup: 1001
      containers:
        - name: chartmuseum
          image: docker.io/bitnami/chartmuseum:0.13.0-debian-10-r19
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          envFrom:
            - configMapRef:
                name: harbor-chartmuseum-envvars
            - secretRef:
                name: harbor-chartmuseum-secret
          env:
            - name: DEBUG
              value: "0"
            - name: BASIC_AUTH_PASS
              valueFrom:
                secretKeyRef:
                  # Take the password from the core component secret
                  name: harbor-core
                  key: secret
          ports:
            - containerPort: 9999
              name: http
          volumeMounts:
            - name: chartmuseum-data
              mountPath: /bitnami/data
              subPath:
      volumes:
        - name: chartmuseum-data
          persistentVolumeClaim:
            claimName: harbor-chartmuseum
